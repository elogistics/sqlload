#!/usr/bin/env ruby

#   Copyright 2012 Ludovico Fischer
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
require 'sqlload'


module Tasks
  BASE_DIRECTORY = 'SQL'
  def self.get_datasets()
    datasets = []
    Dir[File.join(BASE_DIRECTORY, '*')].each do |d|
      if File.directory? d
        datasets << DataSet.new(d)
      end
    end
    datasets
  end

  def self.list_available_datasets()
    self.get_datasets().each do |d|
      puts File.basename(d.directory)
    end
  end

  def self.load_dataset(dataset_name, user_options)
    if dataset_name.nil? then abort 'You must specify a dataset to load' end
    dataset = DataSet.new(File.join(BASE_DIRECTORY, dataset_name), user_options)
    dataset.load
  end

  def self.delete_dataset(dataset_name, user_options)
    if dataset_name.nil? then abort 'You must specify a dataset to delete' end
    dataset = DataSet.new(File.join(BASE_DIRECTORY, dataset_name), user_options)
    dataset.delete
  end

  def self.reset_dataset(dataset_name, user_options)
    if dataset_name.nil? then abort 'You must specify a dataset to reset' end
    dataset = DataSet.new(File.join(BASE_DIRECTORY, dataset_name), user_options)
    dataset.reset
  end
end

module User
  def self.get_commandline_options(command_string)
    require 'optparse'

    options = {}

    optparse = OptionParser.new do |opts|
      opts.banner = 'Usage: sqlload [options] list|load|delete|reset [dataset]'

      opts.version = '0.3.1'

      opts.on('-U', '--user USERNAME', 'Specify username') do |user|
        options[:user] = user
      end

      opts.on('-W', '--password PASSWORD', 'Specify password') do |password|
        options[:password] = password
      end

      opts.on('-d', '--database DBNAME', 'Specify database name') do |dbname|
        options[:dbname] = dbname
      end

      opts.on('-p', '--port PORT', 'Specify port') do |port|
        options[:port] = port
      end

      opts.on_tail('-h', '--help', 'Displays this message') do
        puts opts
        exit
      end
    end

    optparse.parse!(command_string)
    options

  end
end

user_options = User.get_commandline_options(ARGV)
dataset_name = ARGV[1]

case ARGV[0]
when 'list'
  Tasks.list_available_datasets
when 'load'
  Tasks.load_dataset(dataset_name, user_options)
when 'delete'
  Tasks.delete_dataset(dataset_name, user_options)
when 'reset'
  Tasks.reset_dataset(dataset_name, user_options)
  
else abort 'You must specify one of list, load, delete or reset.'
end
